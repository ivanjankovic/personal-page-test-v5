{"version":3,"sources":["svg/email.svg","svg/reddit.svg","svg/discord.svg","svg/navlogo.svg","svg/navicon.svg","main-picture.jpg","Footer.jsx","NavBar.jsx","Main.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Footer","react_default","a","createElement","className","src","svgEmail","alt","svgReddit","svgDiscord","Component","NavBar","svgNavIcon","href","svgLogo","class","React","Main","App","src_NavBar","src_Main","src_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.673824eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/email.f12d6fbf.svg\";","module.exports = __webpack_public_path__ + \"static/media/reddit.6be46dfa.svg\";","module.exports = __webpack_public_path__ + \"static/media/discord.37d44640.svg\";","module.exports = __webpack_public_path__ + \"static/media/navlogo.399f5e1a.svg\";","module.exports = __webpack_public_path__ + \"static/media/navicon.47f61b75.svg\";","module.exports = __webpack_public_path__ + \"static/media/main-picture.74ddd1a1.jpg\";","import React, { Component } from \"react\";\n\nimport svgEmail from \"./svg/email.svg\";\nimport svgReddit from \"./svg/reddit.svg\";\nimport svgDiscord from \"./svg/discord.svg\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"dividerLine\" />\n        <footer>\n          <div>\n            <img src={svgEmail} className=\"svg-icon\" alt=\"email icon\" />\n            <img src={svgReddit} className=\"svg-icon\" alt=\"reddit icon\" />\n            <img src={svgDiscord} className=\"svg-icon\" alt=\"discord icon\" />\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react'\n\nimport svgLogo from \"./svg/navlogo.svg\";\nimport svgNavIcon from \"./svg/navicon.svg\";\n\nclass NavBar extends React.Component {\n  render() {\n    return (\n      <div>\n        <header>\n          <img \n            src={svgNavIcon} className=\"source-client-source-2d-Components-NavStyles-NavMenuIcon-1G5H0\" alt=\"navicon\" />\n          <div className=\"nav-logowrapper\">\n            <a href=\"/\">\n              <img src={svgLogo} className=\"navlogo\" alt=\"logo\" />\n            </a>\n          </div>\n          <div className=\"page-links\">\n            <a href=\"/explore\" className=\"navlink\">Explore</a>\n            <a href=\"/artists\" className=\"navlink\">Artists</a>\n            <a href=\"/made-with-2d\" className=\"navlink\">Made with 2D</a>\n          </div>\n          <div class=\"account-links\">\n            <a href=\"/signin\" class=\"navlink signinlink\">Sign In</a>\n          </div>\n        </header>\n        <div className=\"dividerLine\" />\n      </div>\n    )\n  }\n}\n\nexport default NavBar\n","import React from 'react'\n\nimport mainPicture from \"./main-picture.jpg\";\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <div>\n        <main>\n          {/* <img src={mainPicture} className=\"main-pic\" alt=\"lions head\" /> */}\n          <div class=\"source-client-source-2d-Components-HomeStyles-FeatureGrid-2-U17\"><a href=\"/made-with-2d\" class=\"source-client-source-2d-Components-HomeStyles-FeatureBlock3-2eeDh\"><div class=\"source-client-source-2d-Components-HomeStyles-NewsImage-1xaRn source-client-source-2d-Components-HomeStyles-MadeWith2dImage-Ctyem\"><img class=\"source-client-source-2d-Components-HomeStyles-KovaHero-2iZRR\" src=\"https://cdn.2dimensions.com/features/kova_hero.png\" /></div><div class=\"source-client-source-2d-Components-HomeStyles-NewsContent-3eFrk\"><h3>Made with 2Dimensions</h3><div class=\"source-client-source-2d-Components-HomeStyles-NewsDesc-2up89\">Discover real world projects created with our tools. Tag your posts with #MadeWith2D to get featured!</div><div class=\"source-client-source-2d-Components-HomeStyles-LearnMore-3RY2c\">Learn More</div></div></a><a href=\"https://medium.com/2dimensions/flutter-support-e808cd947e9c\" class=\"source-client-source-2d-Components-HomeStyles-FeatureBlock3-2eeDh\"><div class=\"source-client-source-2d-Components-HomeStyles-NewsImage-1xaRn\"><div class=\"source-client-source-2d-Components-HomeStyles-FlutterImage-hG72S\"></div></div><div class=\"source-client-source-2d-Components-HomeStyles-NewsContent-3eFrk\"><h3>Flutter Support</h3><div class=\"source-client-source-2d-Components-HomeStyles-NewsDesc-2up89\">Add dynamic real-time animations to Google's mobile app SDK for crafting high-quality native apps.</div><div class=\"source-client-source-2d-Components-HomeStyles-LearnMore-3RY2c\">Learn More</div></div></a><a href=\"/about-nima\" class=\"source-client-source-2d-Components-HomeStyles-FeatureBlock3-2eeDh\"><div class=\"source-client-source-2d-Components-HomeStyles-NewsImage-1xaRn\"><img class=\"source-client-source-2d-Components-HomeStyles-NimaLaptopImg-2ewcg\" src=\"https://www.2dimensions.com/static/2224/images/nima_macbook.png\" /></div><div class=\"source-client-source-2d-Components-HomeStyles-NewsContent-3eFrk\"><h3>Nima</h3><div class=\"source-client-source-2d-Components-HomeStyles-NewsDesc-2up89\">Our original raster animation tool (no vector) for Unity and other game engines.</div><div class=\"source-client-source-2d-Components-HomeStyles-LearnMore-3RY2c\">Learn More</div></div></a></div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react'\nimport Footer from './Footer'\nimport NavBar from './NavBar'\nimport Main from './Main'\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar />\n        <Main />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}